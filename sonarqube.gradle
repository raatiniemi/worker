/*
 * Copyright (C) 2020 Tobias Raatiniemi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'org.sonarqube'

sonarqube {
    properties {
        properties['sonar.organization'] = System.getenv('SONAR_ORGANIZATION')
        properties['sonar.host.url'] = System.getenv('SONAR_HOST_URL')
        properties['sonar.login'] = System.getenv('SONAR_LOGIN')

        properties['sonar.projectKey'] = 'me.raatiniemi.worker'
        properties['sonar.projectName'] = 'worker'
        properties['sonar.projectVersion'] = projectVersion

        properties['sonar.java.source'] = sourceCompatibilityVersion
        properties['sonar.java.target'] = targetCompatibilityVersion

        properties['sonar.sourceEncoding'] = 'UTF-8'
        properties['sonar.scm.provider'] = 'git'

        def reportPaths = [
                "$rootDir/app/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml",
                "$rootDir/core-test/build/reports/jacoco/test/jacocoTestReport.xml",
                "$rootDir/core/build/reports/jacoco/test/jacocoTestReport.xml"
        ]
        properties['sonar.coverage.jacoco.xmlReportPaths'] = reportPaths.join(",")
    }
}

project(':app') {
    sonarqube {
        properties {
            properties['sonar.java.binaries'] = "${project.buildDir}/tmp/kotlin-classes/release"
            properties['sonar.java.test.binaries'] = [
                    "${project.buildDir}/tmp/kotlin-classes/releaseUnitTest",
                    "${project.buildDir}/tmp/kotlin-classes/releaseAndroidTest"
            ].join(",")

            properties['sonar.junit.reportPaths'] = [
                    "${project.buildDir}/test-results/testReleaseUnitTest",
                    "${project.buildDir}/outputs/androidTest-results/connected"
            ].join(",")
        }
    }
}

project(':core') {
    sonarqube {
        properties {
            properties['sonar.java.binaries'] = "${project.buildDir}/classes/kotlin/main"
            properties['sonar.java.test.binaries'] = "${project.buildDir}/classes/kotlin/test"

            properties['sonar.junit.reportPaths'] = "${project.buildDir}/test-results/test"
        }
    }
}

project(':core-test') {
    sonarqube {
        properties {
            properties['sonar.java.binaries'] = "${project.buildDir}/classes/kotlin/main"
            properties['sonar.java.test.binaries'] = "${project.buildDir}/classes/kotlin/test"

            properties['sonar.junit.reportPaths'] = "${project.buildDir}/test-results/test"
        }
    }
}

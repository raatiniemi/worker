---
include:
  - project: 'rahome/gitlab-ci-templates'
    ref: main
    file:
      - '/templates/Gradle.gitlab-ci.yml'
      - '/templates/Yaml.gitlab-ci.yml'
  - project: 'rahome/docker-android-environment'
    ref: master
    file: Android.gitlab-ci.yml
  - project: 'rahome/owasp-dependency-check-cache'
    ref: main
    file: Owasp.gitlab-ci.yml

variables:
  GRADLE_VERSION: "8.0.0-jdk11"
  TZ: "Europe/Stockholm"

.android-variables:
  extends:
    - .in-android-environment
  variables:
    JDK_VERSION: "11"
    ANDROID_API_VERSION: "33"

# yamllint disable rule:line-length
build:app:
  stage: build
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'
  extends:
    - .in-android-environment
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: push
    paths:
      - .gradle
      - app/build
      - core/build
      - core-test/build
  script:
    - ./gradlew core:assemble
    - ./gradlew core-test:assemble
    - ./gradlew app:assembleDebug
    - ./gradlew app:assembleRelease
    - ./gradlew app:assembleAndroidTest
    - echo "PROJECT_VERSION=$(./gradlew showVersion | grep -Poi '(?<=version[:]\s)(.+)')" >> build-app.env
  artifacts:
    reports:
      dotenv: build-app.env
    paths:
      - app/build/outputs/apk/release
      - app/build/outputs/apk/debug
      - app/build/outputs/apk/androidTest
      - app/build/tmp/kotlin-classes/release
      - app/build/tmp/kotlin-classes/debug
      - app/build/tmp/kotlin-classes/debugAndroidTest
      - core/build/libs/
      - core/build/classes/kotlin/main/
      - core-test/build/libs/
      - core-test/build/classes/kotlin/main/
    expire_in: 4 hours
  variables: !reference [.android-variables, variables]
# yamllint enable rule:line-length

test:android:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  extends:
    - .in-android-environment
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - app/build
      - core/build
      - core-test/build
  needs:
    - job: build:app
  script:
    - ./gradlew app:lintRelease
  variables: !reference [.android-variables, variables]

test:app:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'
  extends:
    - .in-android-environment
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - app/build
      - core/build
      - core-test/build
  needs:
    - job: build:app
  script:
    - ./gradlew app:testDebugUnitTest
  artifacts:
    paths:
      - app/build/outputs/unit_test_code_coverage/
      - app/build/test-results/testDebugUnitTest/
      - app/build/tmp/kotlin-classes/debugUnitTest/
    expire_in: 4 hours
  variables: !reference [.android-variables, variables]

test:core:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
    - if: '$CI_COMMIT_TAG'
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - core/build
      - core-test/build
  needs:
    - job: build:app
  extends:
    - .in-gradle-environment
  script:
    - gradle core:test
    - gradle core-test:test
  artifacts:
    paths:
      - core/build/jacoco/
      - core/build/test-results/test/
      - core/build/classes/kotlin/test/
      - core-test/build/jacoco/
      - core-test/build/test-results/test/
      - core-test/build/classes/kotlin/test/
    expire_in: 4 hours

test:detekt:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH'
  extends:
    - .in-gradle-environment
  needs: []
  script:
    - gradle detekt

test:owasp:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  extends:
    - .owasp-dependency-check
  needs:
    - job: build:app

test:report:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  extends:
    - .in-android-environment
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - app/build
      - core/build
      - core-test/build
  needs:
    - job: build:app
    - job: test:core
    - job: test:app
  script:
    - ./gradlew jacocoTestReport
  artifacts:
    paths:
      - app/build/reports/jacoco/jacocoTestReport
      - core/build/reports/jacoco/test
      - core-test/build/reports/jacoco/test
    when: always
    expire_in: 4 hours
  variables: !reference [.android-variables, variables]

test:yaml:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  extends:
    - .yaml-lint
  needs: []

test:sonar:
  stage: test
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH'
  image: sonarsource/sonar-scanner-cli
  needs:
    - job: build:app
    - job: test:app
    - job: test:core
    - job: test:report
  script:
    - sonar-scanner -Dsonar.host.url="${SONAR_HOST_URL}"
      -Dsonar.organization="${SONAR_ORGANIZATION}"
      -Dsonar.login="${SONAR_LOGIN}"
      -Dsonar.projectVersion="${PROJECT_VERSION}"
  interruptible: false
  tags:
    - docker

# yamllint disable rule:line-length
deploy:app:
  stage: deploy
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: never
    - if: '$CI_COMMIT_TAG'
  image: ruby:2.7.1-buster
  cache:
    key: "$CI_COMMIT_REF_NAME"
    policy: pull
    paths:
      - .gradle
      - app/build
      - core/build
      - core-test/build
  needs:
    - job: build:app
    - job: test:app
      artifacts: false
    - job: test:core
      artifacts: false
  script:
    - if [ -z "${GOOGLE_PLAY_ANDROID_DEVELOPER_KEY}" ]; then echo "No Google Play Android developer key is available, ensure that \$GOOGLE_PLAY_ANDROID_DEVELOPER_KEY is set for project."; exit 1; fi;
    - echo "${GOOGLE_PLAY_ANDROID_DEVELOPER_KEY}" >"${SUPPLY_JSON_KEY}";
    - bundle install
    - bundle exec fastlane run upload_to_play_store
  interruptible: false
  variables:
    SUPPLY_PACKAGE_NAME: 'me.raatiniemi.worker'
    SUPPLY_APK: 'app/build/outputs/apk/release/app-release.apk'
    SUPPLY_TRACK: 'internal'
    SUPPLY_JSON_KEY: 'app/google-play-android-developer-key.json'
  tags:
    - docker
# yamllint enable rule:line-length

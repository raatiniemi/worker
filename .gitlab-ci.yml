stages:
  - build-core
  - build-app
  - test
  - sonar
  - deploy

.configure-timezone: &configure-timezone
  - echo "Europe/Stockholm" > /etc/timezone

.configure-gradle-home: &configure-gradle-home
  - export GRADLE_USER_HOME=`pwd`/.gradle

.in-docker:
  image: gradle:6.5.0-jdk8
  interruptible: true
  tags:
    - docker

.in-gradle-environment:
  extends:
    - .in-docker
  before_script:
    - *configure-timezone
    - *configure-gradle-home
  variables:
    GRADLE_OPTS: "-Dorg.gradle.daemon=false"

.in-android-environment:
  extends:
    - .in-gradle-environment
  image: raatiniemi/android-environment:android-30-latest
  before_script:
    - *configure-timezone
    - *configure-gradle-home
    - if [ -z "${KEYSTORE_BASE64}" ]; then echo "No keystore is available, ensure that \$KEYSTORE_BASE64 is set for project."; exit 1; fi;
    - echo "$KEYSTORE_BASE64" | base64 -d >app/upload.jks
  variables:
    ANDROID_HOME: "/opt/android-sdk"

# stage: build-core

core:build:
  stage: build-core
  extends:
    - .in-gradle-environment
  script:
    - gradle core:assemble core-test:assemble
  artifacts:
    paths:
      - core/build/libs/
      - core/build/classes/kotlin/main/
      - core-test/build/libs/
      - core-test/build/classes/kotlin/main/
    expire_in: 4 hours

# stage: build-app

app:build:
  stage: build-app
  extends:
    - .in-android-environment
  script:
    - ./gradlew app:assembleRelease app:assembleInstrumented app:assembleAndroidTest
  dependencies:
    - core:build
  artifacts:
    paths:
      - app/build/outputs/apk/androidTest
      - app/build/outputs/apk/instrumented
      - app/build/outputs/apk/release
      - app/build/tmp/kotlin-classes/instrumented
      - app/build/tmp/kotlin-classes/instrumentedAndroidTest
      - app/build/tmp/kotlin-classes/release
    expire_in: 4 hours

# stage: test

core:test:
  stage: test
  extends:
    - .in-gradle-environment
  script:
    - gradle core:test core-test:test
  dependencies:
    - core:build
  artifacts:
    paths:
      - core/build/jacoco/
      - core/build/test-results/test/
      - core/build/classes/kotlin/test/
      - core-test/build/jacoco/
      - core-test/build/test-results/test/
      - core-test/build/classes/kotlin/test/
    expire_in: 4 hours

app:lint:
  stage: test
  extends:
    - .in-android-environment
  script:
    - ./gradlew app:lintRelease
  dependencies:
    - core:build
    - app:build

app:test:
  stage: test
  extends:
    - .in-android-environment
  script:
    - ./gradlew app:testInstrumentedUnitTest
  dependencies:
    - core:build
    - app:build
  artifacts:
    paths:
      - app/build/jacoco/
      - app/build/test-results/testInstrumentedUnitTest/
      - app/build/tmp/kotlin-classes/instrumentedUnitTest/
    expire_in: 4 hours

app:instrumented test:
  stage: test
  extends:
    - .in-docker
  image: google/cloud-sdk:latest
  before_script:
    - if [ -z "${GCLOUD_PROJECT_ID}" ]; then echo "No project id is available for gcloud configuration, ensure that \$GCLOUD_PROJECT_ID is set for project."; exit 1; fi;
    - if [ -z "${GCLOUD_SERVICE_ACCOUNT}" ]; then echo "No service account configuration is available for gcloud, ensure that \$GCLOUD_SERVICE_ACCOUNT is set for project."; exit 1; fi;
    - gcloud config set project "${GCLOUD_PROJECT_ID}"
    - echo "${GCLOUD_SERVICE_ACCOUNT}" >service-account.json
    - gcloud auth activate-service-account --key-file service-account.json
  script:
    - bin/run-instrumented-test
  dependencies:
    - app:build
  artifacts:
    paths:
      - app/build/outputs/androidTest-results/connected/
      - app/build/outputs/code_coverage/
    when: always
    expire_in: 4 hours
  allow_failure: true
  only:
    - master

# stage: sonar

sonar:analyze:
  stage: sonar
  extends:
    - .in-android-environment
  script:
    - ./gradlew jacocoTestReport sonarqube
  interruptible: false
  dependencies:
    - core:build
    - app:build
    - core:test
    - app:test
    - app:instrumented test
  only:
    - master

# stage: deploy

app:deploy:
  stage: deploy
  extends:
    - .in-android-environment
  script:
    - if [ -z "${GOOGLE_PLAY_ANDROID_DEVELOPER_KEY}" ]; then echo "No Google Play Android developer key is available, ensure that \$GOOGLE_PLAY_ANDROID_DEVELOPER_KEY is set for project."; exit 1; fi;
    - echo "${GOOGLE_PLAY_ANDROID_DEVELOPER_KEY}" >"app/google-play-android-developer-key.json";
    - ./gradlew app:publishReleaseApk
  interruptible: false
  dependencies:
    - app:build
  only:
    - tags

/*
 * Copyright (C) 2022 Tobias Raatiniemi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */
apply plugin: 'jacoco'

jacoco {
    toolVersion "0.8.7"
}

def packageDirectory = 'me/raatiniemi/worker'
def classPattern = "$packageDirectory/**/*.class"

def androidExclusion = ['**/R.class', '**/R$*.class', '**/BuildConfig.class']

task jacocoTestReport(type: JacocoReport) {
    group = 'verification'
    description = 'Generates code coverage report for the test task.'

    reports {
        xml.required = jacocoReportFormats.contains('xml')
        html.required = jacocoReportFormats.contains('html')
    }

    getClassDirectories().from(
            fileTree(dir: project.buildDir, excludes: androidExclusion).matching {
                include "tmp/kotlin-classes/instrumented/${classPattern}"
            }
    )
    getSourceDirectories().from(files("${project.projectDir}/src/main/java/$packageDirectory"))
    getExecutionData().from(fileTree(dir: project.buildDir, includes: ["**/*.exec", "**/*.ec"]))
}

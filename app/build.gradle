buildscript {
    repositories {
        google()
        jcenter()

        mavenCentral()
        mavenLocal()
    }

    dependencies {
        classpath 'com.google.guava:guava:22.0'
        classpath 'com.android.tools.build:gradle:3.0.1'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"

        classpath 'com.fernandocejas.frodo:frodo-plugin:0.8.3'
        classpath 'com.github.triplet.gradle:play-publisher:1.1.5'
        classpath 'org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:2.6'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'com.fernandocejas.frodo'
apply plugin: 'com.github.triplet.play'
apply plugin: 'jacoco'
apply plugin: 'org.sonarqube'

android {
    compileSdkVersion 27
    buildToolsVersion '27.0.2'

    defaultConfig {
        applicationId "me.raatiniemi.worker"
        minSdkVersion 21
        targetSdkVersion 27
        versionName projectVersion
        versionCode projectVersionCode

        resConfigs "en"

        testInstrumentationRunner 'me.raatiniemi.worker.AndroidTestRunner'
    }
    if (System.getenv("CI")) {
        signingConfigs {
            release {
                storeFile file(System.getenv("KEYSTORE_PATH"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }
    buildTypes {
        release {
            if (System.getenv("CI")) {
                signingConfig signingConfigs.release
            }

            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility sourceCompatibilityVersion
        targetCompatibility targetCompatibilityVersion
    }

    sourceSets {
        main {
            res.srcDirs = [
                    'src/main/res-main',
                    'src/main/res-screen/project',
                    'src/main/res-screen/projects',
                    'src/main/res-screen/settings'
            ]
        }
    }

    // AndroidHttpClient was removed from the SDK in v23 of the build tools.
    // This causes issues since robolectric is running against an earlier
    // version of the SDK, and expects the class to be present.
    useLibrary 'org.apache.http.legacy'

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true

        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

if (System.getenv("PLAY_KEY_PATH")) {
    play {
        jsonFile = file(System.getenv("PLAY_KEY_PATH"))
    }
}

tasks.sonarqube.dependsOn 'test'

sonarqube {
    properties {
        def binaries = "${buildDir}/intermediates/classes/release"

        def androidPath = android.sdkDirectory.getPath()
        def libraries = "${androidPath}/platforms/${android.compileSdkVersion}/android.jar," +
                "${androidPath}/extras/**/*.jar"

        properties['sonar.projectKey'] = 'worker:android'
        properties['sonar.projectName'] = 'worker'
        properties['sonar.projectVersion'] = projectVersion

        properties['sonar.sourceEncoding'] = 'UTF-8'
        properties['sonar.scm.provider'] = 'git'

        properties['sonar.java.source'] = sourceCompatibilityVersion
        properties['sonar.java.target'] = targetCompatibilityVersion

        properties['sonar.sources'] = 'src/main/java'
        properties['sonar.tests'] = 'src/test/java,src/androidTest/java'

        properties['sonar.java.binaries'] = binaries
        properties['sonar.java.test.binaries'] = binaries

        properties['sonar.java.libraries'] = libraries
        properties['sonar.java.test.libraries'] = libraries

        properties['sonar.junit.reportsPath'] = "${buildDir}/test-results/testReleaseUnitTest"
        properties['sonar.jacoco.reportPaths'] = fileTree(dir: buildDir, includes: ['**/*.exec', '**/*.ec'])
        properties['sonar.java.coveragePlugin'] = 'jacoco'
    }
}

jacoco {
    toolVersion = '0.7.8'
}

dependencies {
    compileOnly 'javax.annotation:jsr250-api:1.0'

    kapt 'com.google.dagger:dagger-compiler:2.13'
    kapt 'com.jakewharton:butterknife-compiler:8.8.1'

    debugImplementation 'com.squareup.leakcanary:leakcanary-android:1.5.4'

    implementation 'com.android.support:appcompat-v7:27.0.2'
    implementation 'com.android.support:cardview-v7:27.0.2'
    implementation 'com.android.support:design:27.0.2'
    implementation 'com.android.support:recyclerview-v7:27.0.2'
    implementation 'com.android.support:support-annotations:27.0.2'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlinVersion"
    implementation 'io.reactivex:rxandroid:1.2.0'
    implementation 'com.jakewharton.rxrelay:rxrelay:1.2.0'
    implementation 'com.trello:rxlifecycle-android:1.0'
    implementation 'com.jakewharton.timber:timber:4.6.0'
    implementation 'org.greenrobot:eventbus:3.0.0'
    implementation 'com.h6ah4i.android.widget.advrecyclerview:advrecyclerview:0.11.0'
    implementation 'com.google.dagger:dagger:2.13'
    implementation 'com.jakewharton:butterknife:8.8.1'
    releaseImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.6.2'
    testImplementation 'org.robolectric:robolectric:3.5.1'
    testImplementation 'com.squareup.leakcanary:leakcanary-android-no-op:1.5.4'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:2.2.2') {
        exclude group: 'com.android.support', module: 'support-annotations'
        exclude group: 'com.google.code.findbugs', module: 'jsr305'
    }
    androidTestImplementation('com.android.support.test:runner:0.5') {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
}

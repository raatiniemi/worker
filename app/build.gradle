/*
 * Copyright (C) 2018 Tobias Raatiniemi
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 2 of the License.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

//noinspection GradleDependency
buildscript {
    repositories {
        google()
        maven { url "https://plugins.gradle.org/m2/" }
        jcenter()
    }

    dependencies {
        classpath 'androidx.navigation:navigation-safe-args-gradle-plugin:2.0.0'
        classpath 'com.github.triplet.gradle:play-publisher:2.2.1'
    }
}

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'androidx.navigation.safeargs.kotlin'
apply plugin: 'com.google.gms.google-services'
apply plugin: 'io.fabric'
apply plugin: 'com.github.triplet.play'
apply from: 'jacoco.gradle'

android {
    compileSdkVersion 28
    buildToolsVersion '28.0.3'

    defaultConfig {
        applicationId "me.raatiniemi.worker"
        minSdkVersion 27
        targetSdkVersion 28
        versionName projectVersion
        versionCode projectVersionCode

        if (System.getenv("CI")) {
            testBuildType 'release'
        }
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'

        resConfigs "en"

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["room.schemaLocation": "$projectDir/schemas".toString()]
            }
        }
    }
    if (System.getenv("CI")) {
        signingConfigs {
            release {
                storeFile file(System.getenv("KEYSTORE_NAME"))
                storePassword System.getenv("KEYSTORE_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("KEY_PASSWORD")
            }
        }
    }
    buildTypes {
        debug {
            manifestPlaceholders = [enableCrashReporting: "false"]
        }
        release {
            manifestPlaceholders = [enableCrashReporting: "true"]

            if (System.getenv("CI")) {
                signingConfig signingConfigs.release
            }

            shrinkResources true
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            testProguardFile 'proguard-test-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility sourceCompatibilityVersion
        targetCompatibility targetCompatibilityVersion
    }

    sourceSets {
        test {
            java.srcDirs += 'src/sharedTest/java'
        }
        androidTest {
            java.srcDirs += 'src/sharedTest/java'
            assets.srcDirs += files("$projectDir/schemas".toString())
        }
    }

    lintOptions {
        quiet true
        explainIssues true

        abortOnError true
        warningsAsErrors true

        htmlReport false
        xmlReport false
    }

    testOptions {
        unitTests.includeAndroidResources = true
        unitTests.returnDefaultValues = true
        unitTests.all {
            jacoco {
                includeNoLocationClasses = true
            }
        }
    }
}

play {
    track = 'internal'
    enabled = false

    if (System.getenv("GOOGLE_PLAY_ANDROID_DEVELOPER_KEY_NAME")) {
        enabled = true
        serviceAccountCredentials = file(System.getenv("GOOGLE_PLAY_ANDROID_DEVELOPER_KEY_NAME"))
    }
}

dependencies {
    kapt 'androidx.room:room-compiler:2.1.0-beta01'

    implementation project(':core')
    implementation 'androidx.annotation:annotation:1.0.2'
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation 'androidx.recyclerview:recyclerview:1.0.0'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.0.0'
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'
    implementation 'androidx.room:room-runtime:2.1.0-beta01'
    implementation 'androidx.paging:paging-runtime:2.1.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.0.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.0.0'
    implementation 'com.google.android.material:material:1.0.0'

    implementation 'com.google.firebase:firebase-core:16.0.9'
    implementation 'com.crashlytics.sdk.android:crashlytics:2.10.1'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlinVersion"
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.0.0'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.0.0'

    implementation 'org.koin:koin-android:1.0.2'
    implementation 'org.koin:koin-android-viewmodel:1.0.2'

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'org.greenrobot:eventbus:3.0.0'

    testImplementation project(':core-test')
    testImplementation 'junit:junit:4.12'
    testImplementation 'androidx.arch.core:core-testing:2.0.1'

    androidTestImplementation project(':core-test')
    androidTestImplementation 'androidx.test:core:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.room:room-testing:2.1.0-beta01'
}
